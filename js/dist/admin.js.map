{"version":3,"file":"admin.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDR,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFf,EAAyBM,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,GAAO,G,+BCL9D,MAAM,EAA+BC,OAAOC,KAAKC,OAAO,a,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,iBCAlD,EAA+BF,OAAOC,KAAKC,OAAO,iC,aCIxDC,IAAAA,aAAiBC,IAAI,iCAAiC,WACpDD,IAAAA,cAAiB,IACV,0BACJE,gBAAgB,CACfC,QAAS,+CACTC,MAAOJ,IAAAA,WAAeK,MAAM,sDAC5BC,KAAM,YAEPJ,gBAAgB,CACfC,QAAS,oDACTC,MAAOJ,IAAAA,WAAeK,MAAM,2DAC5BC,KAAM,YAEPJ,gBAAgB,CACfC,QAAS,kDACTG,KAAM,UACNF,MAAOJ,IAAAA,WAAeK,MAAM,iEAE7BH,gBAAgB,CACfC,QAAS,uCACTG,KAAM,UACNF,MAAOJ,IAAAA,WAAeK,MAAM,oDAC5BE,KAAMP,IAAAA,WAAeK,MAAM,qDAE5BH,gBAAgB,CACfC,QAAS,yCACTG,KAAM,UACNF,MAAOJ,IAAAA,WAAeK,MAAM,gDAC5BE,KAAMP,IAAAA,WAAeK,MAAM,kDAE/BG,EAAAA,EAAAA,QAAOC,IAAAA,UAAwB,WAAW,SAAUC,GAClDA,EAAMT,IACJ,UACA,CACEU,KAAMX,IAAAA,WAAeK,MAAM,mDAC3BO,QAAS,SAACC,GACR,IAAMC,EAAcD,EAAKE,KAAKC,WAAWC,YAGzC,MAAoB,KAAhBH,EAA2B,IAG7BI,EAAA,WACEA,EAAA,OAAKC,UAAU,YAAYC,QAAQ,OAAOC,IAN7B,+DAAiEP,EAAc,OAMnCQ,IAAKR,IAGpE,IAED,GAEL,GACF,G","sources":["webpack://@litalino/flarum-country-flags/webpack/bootstrap","webpack://@litalino/flarum-country-flags/webpack/runtime/compat get default export","webpack://@litalino/flarum-country-flags/webpack/runtime/define property getters","webpack://@litalino/flarum-country-flags/webpack/runtime/hasOwnProperty shorthand","webpack://@litalino/flarum-country-flags/webpack/runtime/make namespace object","webpack://@litalino/flarum-country-flags/external root \"flarum.core.compat['admin/app']\"","webpack://@litalino/flarum-country-flags/external root \"flarum.core.compat['common/extend']\"","webpack://@litalino/flarum-country-flags/external root \"flarum.core.compat['admin/components/UserListPage']\"","webpack://@litalino/flarum-country-flags/./src/admin/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/components/UserListPage'];","import app from 'flarum/admin/app';\nimport { extend } from 'flarum/common/extend';\nimport UserListPage from 'flarum/admin/components/UserListPage';\n\napp.initializers.add('litalino/flarum-country-flags', () => {\n  app.extensionData\n    .for('litalino-country-flags')\n    .registerSetting({\n      setting: 'justoverclock-country-flags.showFlagsOnPosts',\n      label: app.translator.trans('justoverclock-country-flags.admin.showFlagsOnPosts'),\n      type: 'boolean',\n    })\n    .registerSetting({\n      setting: 'justoverclock-country-flags.showFlagsOnPosts_text',\n      label: app.translator.trans('justoverclock-country-flags.admin.showFlagsOnPosts_text'),\n      type: 'boolean',\n    })\n    .registerSetting({\n      setting: 'justoverclock-country-flags.set_on_registration',\n      type: 'boolean',\n      label: app.translator.trans('justoverclock-country-flags.admin.set_on_registration_label'),\n    })\n    .registerSetting({\n      setting: 'justoverclock-country-flags.required',\n      type: 'boolean',\n      label: app.translator.trans('justoverclock-country-flags.admin.required_label'),\n      help: app.translator.trans('justoverclock-country-flags.admin.required_help'),\n    })\n    .registerSetting({\n      setting: 'justoverclock-country-flags.bind_login',\n      type: 'boolean',\n      label: app.translator.trans('justoverclock-country-flags.admin.bind_label'),\n      help: app.translator.trans('justoverclock-country-flags.admin.bind_help'),\n    })\n  extend(UserListPage.prototype, 'columns', function (items) {\n    items.add(\n      'country',\n      {\n        name: app.translator.trans('justoverclock-country-flags.admin.countryColumn'),\n        content: (user) => {\n          const countryFlag = user.data.attributes.countryCode;\n          const showFlag = 'https://purecatamphetamine.github.io/country-flag-icons/3x2/' + countryFlag + '.svg';\n\n          if (countryFlag === '') return ' ';\n\n          return (\n            <div>\n              <img className=\"adminFlag\" loading=\"lazy\" src={showFlag} alt={countryFlag} />\n            </div>\n          );\n        },\n      },\n      -50\n    );\n  });\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","app","add","registerSetting","setting","label","trans","type","help","extend","UserListPage","items","name","content","user","countryFlag","data","attributes","countryCode","m","className","loading","src","alt"],"sourceRoot":""}